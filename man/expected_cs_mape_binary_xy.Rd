% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/expected_cs_mape_binary_xy.R
\name{expected_cs_mape_binary_xy}
\alias{expected_cs_mape_binary_xy}
\title{Calculate the expected calibration slope and mean absolute prediction error (MAPE) for a given  sample size}
\usage{
expected_cs_mape_binary_xy(
  n,
  p,
  c,
  n.predictors,
  beta,
  nsim = 1000,
  nval = 25000,
  method = "MLE",
  parallel = TRUE,
  long = FALSE,
  approx = FALSE,
  x = x,
  y = y
)
}
\arguments{
\item{n}{(numeric) The sample size}

\item{p}{(numeric) The anticipated outcome prevalence}

\item{c}{(numeric) The C-statistic}

\item{n.predictors}{(numeric) The number of candidate predictor variables}

\item{beta}{(numeric) Strength of predictors (same length as n.predictors)}

\item{nsim}{(numeric) The number of simulations (at least 500, default value 1000)}

\item{nval}{(numeric) Size of validation data}

\item{method}{(character) the fitting method. "MLE" is the default and currently only option, but others will be added in future versions}

\item{parallel}{(numeric) relative strength of predictor variables (same length as n_predictors)}

\item{long}{(logical) Extract all simulations instead of just averages}

\item{approx}{(logical) Extract all simulations instead of just averages}

\item{x}{(logical) Matrix of covariate values}

\item{y}{(logical) Matrix of outcome values}
}
\value{
a data frame df with elements:
theinut sample size
the expected calibration slope (mean_CS)
the standard deviation of the CS (sd_CS)
the probability of obtaining a miscalibrated model with calibration slope <0.8 (Pr(CS<0.8))
the expected MAPE (MAPE)
the standard deviation of the expected MAPE (sd_MAPE)
the expected optimism in R square Nagelgerke (optimism_R2_Nag)
}
\description{
This function calculates the expected calibration slope and MAPE given key data and model characteristics
(outcome prevalence, C-statistic and number of predictors). It takes approximately 15 seconds to run.
}
\examples{
# expected_cs_mape_binary(n = 530, p = 0.2, c = 0.85, n.predictors = 10, nsim = 100, parallel = FALSE)

# Prefer parallel computing with >2 cores that ensure faster running
# expected_cs_mape_binary(n = 530, p = 0.2, c = 0.85, n.predictors = 10, nsim = 100, parallel = TRUE)
}
\seealso{
samplesizedev_binary samplesizedev_survival
}
